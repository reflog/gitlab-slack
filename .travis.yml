language: go

go:
  - 1.9

branches:
  only:
    - master

cache:
  directories:
    - $GOPATH/pkg/dep

before_install:
  # Setup some env variables
  - GO_FILES=$(find . -iname '*.go' | grep -v /vendor/)  # All the .go files, excluding vendor/
  - PKGS=$(go list ./... | grep -v /vendor/)             # All the import paths, excluding vendor/

  # Setup dependency management tool
  - curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o $GOPATH/bin/dep
  - chmod +x $GOPATH/bin/dep
  # To install latest version, use `go get -u github.com/golang/dep/cmd/dep`
  - go get github.com/mitchellh/gox
  - go get github.com/tcnksm/ghr


install:
  - dep ensure

script:
  - test -z $(gofmt -s -l $GO_FILES)  # Fail if a .go file hasn't been formatted with gofmt
  - go vet $PKGS                      # go vet is the official Go static analyzer
  - megacheck $PKGS                   # "go vet on steroids" + linter
  - errcheck $PKGS                    # Check for unchecked errors
  - golint -set_exit_status $PKGS     # One last linter
  # Run all the tests, track coverage in coveralls.io
  - go test -v -covermode=count -coverprofile=profile.cov $PKGS
  - goveralls -coverprofile=profile.cov -service=travis-ci
after_success:
  - gox -output "dist/{{.OS}}_{{.Arch}}_{{.Dir}}"
  - ghr --username reflog --token $GITHUB_TOKEN --replace --prerelease --debug pre-release dist/